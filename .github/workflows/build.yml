name: CI/CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3
      
      - name: Log in to GitHub Container Registry
        run: echo "${{ secrets.GH_PAT }}" | docker login ghcr.io -u "${{ github.actor }}" --password-stdin

      - name: Build Docker Image
        run: docker build -t ghcr.io/cell1911/node-deploy1:latest .

      - name: Push Docker Image
        run: docker push ghcr.io/cell1911/node-deploy1:latest

  deploy-infrastructure:
    runs-on: ubuntu-latest
    needs: build-and-push
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3
      
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1

      - name: Initialize Terraform
        run: terraform init
        working-directory: terraform

      - name: Apply Terraform
        run: terraform apply -auto-approve
        working-directory: terraform
        env:
          TF_VAR_aws_access_key: ${{ secrets.AWS_ACCESS_KEY }}
          TF_VAR_aws_secret_key: ${{ secrets.AWS_SECRET_KEY }}

      - name: Debug - List terraform Directory
        run: ls -l $GITHUB_WORKSPACE/terraform

      - name: Get Terraform Output (EC2 IP) and Save to File
        run: |
          terraform output -json | jq -r '.ec2_public_ip.value' > terraform/ec2_ip.txt
          ls -l terraform/  # Debugging: List directory contents
          cat terraform/ec2_ip.txt  # Debugging: Print saved IP
        working-directory: terraform
      
      - name: Commit EC2 IP to Repo
        run: |
          mv terraform/ec2_ip.txt .
          git config --global user.email "github-actions@github.com"
          git config --global user.name "GitHub Actions"
          git add ec2_ip.txt
          git commit -m "Save EC2 IP from Terraform"
          git push
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}


  deploy-ansible:
    runs-on: ubuntu-latest
    needs: deploy-infrastructure
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3
        
      - name: List checked-out files
        run: ls -R


      - name: Install Ansible
        run: sudo apt update && sudo apt install -y ansible

      - name: Configure SSH Key
        run: |
          echo "${{ secrets.ANSIBLE_SSH_KEY }}" > ~/my-key.pem
          chmod 400 ~/my-key.pem

      - name: Debug - Print Extracted EC2 IP
        run: |
          echo "Extracted EC2_IP: $EC2_IP"
        

      - name: Debug - List Ansible Directory
        run: ls -l $GITHUB_WORKSPACE/ansible

      - name: Run Ansible Playbook
        run: ansible-playbook -i "$EC2_IP," ansible/deploy.yml --user ubuntu --private-key ~/my-key.pem
        env:
         EC2_IP: ${{ env.EC2_IP }}



